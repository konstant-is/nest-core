{"version":3,"sources":["../src/nest-server.ts","../src/create-openapi.ts","../src/service.ts"],"sourcesContent":["import { CorsOptions } from \"@nestjs/common/interfaces/external/cors-options.interface\";\nimport { NestFactory } from \"@nestjs/core\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { OpenAPIObject, SwaggerDocumentOptions } from \"@nestjs/swagger\";\n\nimport { createOpenApi } from \"./create-openapi\";\nimport { Logger, ValidationPipe } from \"@nestjs/common\";\n// import { NestExpressApplication } from \"@nestjs/platform-express\";\n\nexport interface INestAppConfig {\n  name: string;\n  docsUrl: string;\n  module: any;\n  corsOptions?: CorsOptions;\n  openApiPath?: string;\n  port?: number;\n}\n\nexport async function createNestApp<T>(\n  { name, docsUrl, module, corsOptions, openApiPath }: INestAppConfig,\n  documentBuilder: Pick<\n    OpenAPIObject,\n    \"openapi\" | \"info\" | \"servers\" | \"security\" | \"tags\" | \"externalDocs\"\n  >,\n  swaggerOptions?: SwaggerDocumentOptions\n) {\n  const app = await NestFactory.create(module);\n  app.useGlobalPipes(new ValidationPipe({ transform: true }));\n\n  const config = app.get(ConfigService);\n  const port = config.get(\"PORT\") || 8080;\n  const environment = config.get(\"environment\");\n\n  const globalPrefix = \"api\";\n  app.setGlobalPrefix(globalPrefix);\n\n  await createOpenApi(\n    app,\n    docsUrl,\n    documentBuilder,\n    swaggerOptions,\n    openApiPath\n  );\n\n  if (environment === \"production\" && corsOptions) {\n    app.enableCors(corsOptions);\n  } else {\n    app.enableCors();\n  }\n\n  const rootPath = `http://localhost:${port}/${globalPrefix}`;\n  await app.listen(port, () => {\n    Logger.log(`Running in ${environment} mode`);\n    Logger.log(`ðŸš€ Application is running on: ${rootPath}`);\n    Logger.log(`Docs at: ${rootPath}/swagger`);\n  });\n\n  return app;\n}\n","import { INestApplication } from \"@nestjs/common\";\nimport {\n  OpenAPIObject,\n  SwaggerDocumentOptions,\n  SwaggerModule,\n} from \"@nestjs/swagger\";\n\nimport { ensureFile, writeFile } from \"fs-extra\";\nimport { dump } from \"js-yaml\";\n\nexport const createOpenApi = async (\n  app: INestApplication,\n  path: string,\n  openApi: Omit<OpenAPIObject, \"paths\">,\n  options?: SwaggerDocumentOptions,\n  openApiPath?: string\n) => {\n  const document = SwaggerModule.createDocument(app, openApi, options);\n  SwaggerModule.setup(path ?? \"swagger\", app, document);\n\n  const filePath = openApiPath ?? \"docs/openapi/openapi.yaml\";\n\n  try {\n    await ensureFile(filePath);\n    await writeFile(filePath, dump(document, { noRefs: true }));\n    console.log(\"OpenAPI written to \", filePath);\n  } catch (err) {\n    console.error(err);\n  }\n\n  return document;\n};\n","import { Injectable, Logger } from '@nestjs/common';\n\n@Injectable()\nexport abstract class Service {\n  public logger: Logger;\n\n  constructor(name: string) {\n    this.logger = new Logger(name);\n  }\n}\n\n@Injectable()\nexport abstract class Repo {\n  public logger: Logger;\n\n  constructor(name: string) {\n    this.logger = new Logger(name);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;;;ACD9B;AAAA,EAGE;AAAA,OACK;AAEP,SAAS,YAAY,iBAAiB;AACtC,SAAS,YAAY;AAEd,IAAM,gBAAgB,OAC3B,KACA,MACA,SACA,SACA,gBACG;AACH,QAAM,WAAW,cAAc,eAAe,KAAK,SAAS,OAAO;AACnE,gBAAc,MAAM,QAAQ,WAAW,KAAK,QAAQ;AAEpD,QAAM,WAAW,eAAe;AAEhC,MAAI;AACF,UAAM,WAAW,QAAQ;AACzB,UAAM,UAAU,UAAU,KAAK,UAAU,EAAE,QAAQ,KAAK,CAAC,CAAC;AAC1D,YAAQ,IAAI,uBAAuB,QAAQ;AAAA,EAC7C,SAAS,KAAK;AACZ,YAAQ,MAAM,GAAG;AAAA,EACnB;AAEA,SAAO;AACT;;;ADzBA,SAAS,QAAQ,sBAAsB;AAYvC,eAAsB,cACpB,EAAE,MAAM,SAAS,QAAQ,aAAa,YAAY,GAClD,iBAIA,gBACA;AACA,QAAM,MAAM,MAAM,YAAY,OAAO,MAAM;AAC3C,MAAI,eAAe,IAAI,eAAe,EAAE,WAAW,KAAK,CAAC,CAAC;AAE1D,QAAM,SAAS,IAAI,IAAI,aAAa;AACpC,QAAM,OAAO,OAAO,IAAI,MAAM,KAAK;AACnC,QAAM,cAAc,OAAO,IAAI,aAAa;AAE5C,QAAM,eAAe;AACrB,MAAI,gBAAgB,YAAY;AAEhC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,MAAI,gBAAgB,gBAAgB,aAAa;AAC/C,QAAI,WAAW,WAAW;AAAA,EAC5B,OAAO;AACL,QAAI,WAAW;AAAA,EACjB;AAEA,QAAM,WAAW,oBAAoB,IAAI,IAAI,YAAY;AACzD,QAAM,IAAI,OAAO,MAAM,MAAM;AAC3B,WAAO,IAAI,cAAc,WAAW,OAAO;AAC3C,WAAO,IAAI,wCAAiC,QAAQ,EAAE;AACtD,WAAO,IAAI,YAAY,QAAQ,UAAU;AAAA,EAC3C,CAAC;AAED,SAAO;AACT;;;AE1DA,SAAS,YAAY,UAAAA,eAAc;AAAnC;AAEA,uBAAC,WAAW;AACL,IAAe,UAAf,MAAuB;AAAA,EACrB;AAAA,EAEP,YAAY,MAAc;AACxB,SAAK,SAAS,IAAIC,QAAO,IAAI;AAAA,EAC/B;AACF;AANO;AAAe,UAAf,uCADP,qBACsB;AAAf,4BAAe;AAHtB,sBAAAC;AAWA,oBAAC,WAAW;AACL,IAAe,OAAf,MAAoB;AAAA,EAClB;AAAA,EAEP,YAAY,MAAc;AACxB,SAAK,SAAS,IAAID,QAAO,IAAI;AAAA,EAC/B;AACF;AANOC,SAAA;AAAe,OAAf,kBAAAA,QAAA,WADP,kBACsB;AAAf,kBAAAA,QAAA,GAAe;","names":["Logger","Logger","_init"]}